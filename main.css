/* style tiles to fit on the screen */

/* nice background */

/* cool tile covers */
/* :root {
  --offsetX: 0;
} */

html,
body {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  /* overflow: hidden; */

  perspective: 1000px;
}

img {
  /* width: 100%; */
  height: 100%;
  object-fit: cover;
  margin: auto;
  margin-left: 50%;
  margin-top: 50%;
  transform: translate(-50%, -50%);
}

h1 {
  color: #00e2fb;
}

h2 {
  color: #0e0078;
  font-size: 5em;
  margin-top: 0.1em;
}

.tile {
  background-color: #fe68c5;
  overflow: hidden;
}

.container {
  display: flex;
  background-color: purple;
  width: 100%;
  height: 100%;
  justify-content: space-evenly;
  align-content: space-evenly;
  flex-wrap: wrap;
  gap: 5px;

  /* confetti */
  transform-style: preserve-3d;
  overflow: hidden;
}

.block {
  display: block;
  text-align: center;
}

.hidden {
  visibility: hidden;
}

.fadeout {
  opacity: 0;
  transition: opacity 1.5s linear;
}

.fadein {
  opacity: 1;
  transition: opacity 1.5s linear;
}

.confetti {
  position: absolute;
  inset: 50%;
  z-index: 10;
  transform-style: preserve-3d;
}

.confetti > span {
  /* give random values to each piece */
  position: absolute;
  width: var(--confetti-size);
  border-radius: var(--shape);
  aspect-ratio: 1;
  background: hsl(var(--hue) 100% 50%);
}

.reset-btn {
  padding: 1.4em 2.4em;
  border-radius: 1.8em;
  border: none;
  font-size: large;
  font-weight: 700;
  background-color: #ff43b7;
}

.counter {
  text-align: center;
  background-color: #f5bd00;
  border-radius: 50%;
}

.explosion > span {
  animation: confettiSpread 6s cubic-bezier(0, 1, 1, 1); /* pop quick, drop slow */
}

.explosion {
  animation: confettiSettle 6s;
}

@keyframes confettiSpread {
  25% {
    translate: 0 -40vh; /* How high confetti pops */
  }
  100% {
    translate: 0 -40vh;
    transform: translateX(var(--offsetX)) translateY(var(--offsetY))
      translateZ(var(--offsetZ)) rotateX(var(--spin)) rotateY(var(--spinY));
    /* add dynamics to confetti pieces */
  }
}

@keyframes confettiSettle {
  0%,
  30% {
    opacity: 1;
  }
  80% {
    opacity: 0;
  }
  100% {
    transform: translateY(60vh); /* How low the confetti falls */
    opacity: 0;
  }
}

@supports (-webkit-touch-callout: none) {
  /* CSS specific to iOS devices */
  @keyframes confettiSpread {
    25% {
      translate: 0 -10vh; /* How high confetti pops */
    }
    100% {
      translate: 0 -10vh;
      transform: translateX(var(--offsetX)) translateY(var(--offsetY))
        translateZ(var(--offsetZ)) rotateX(var(--spin)) rotateY(var(--spinY));
      /* add dynamics to confetti pieces */
    }
  }
}
